Arduino:

#include <Keypad.h>


const byte numRows= 4; //number of rows on the keypad
const byte numCols= 4; //number of columns on the keypad

char keymap[numRows][numCols]= 
{
{'1', '2', '3', 'A'}, 
{'4', '5', '6', 'B'}, 
{'7', '8', '9', 'C'},
{'*', '0', '#', 'D'}
};

//Code that shows the the keypad connections to the arduino terminals
byte rowPins[numRows] = {9,8,7,6}; //Rows 0 to 3
byte colPins[numCols]= {5,4,3,2}; //Columns 0 to 3

//initializes an instance of the Keypad class
Keypad myKeypad= Keypad(makeKeymap(keymap), rowPins, colPins, numRows, numCols);

void setup()
{
Serial.begin(9600);
}

//If key is pressed, this key is stored in 'keypressed' variable
//If key is not equal to 'NO_KEY', then this key is printed out
//if count=17, then count is reset back to 0 (this means no key is pressed during the whole keypad scan process
void loop()
{
char keypressed = myKeypad.getKey();
if (keypressed != NO_KEY)
{
Serial.println(keypressed);
}
}



Processing:
import processing.serial.*;
import cc.arduino.*;
import org.firmata.*;
PImage back;
PImage cakeone;
PImage caketwo;
PImage cakethree;
PImage naione;
PImage naitwo;
PImage naithree;
PImage naifour;
PImage pone;
PImage ptwo;
PImage pthree;
PImage pfour;
PImage pfive;
PImage psix;
PImage pseven;
PImage peight;

Serial myPort;
String x ; 
char y ='e';
char n;

void setup ( ) {
size (500, 500); 
back = loadImage("bg.jpg");
image(back, 0, 0);
myPort  =  new Serial (this, "/dev/tty.usbmodem1411",  9600); 
myPort.bufferUntil ('\n'); } 

void serialEvent  (Serial myPort) {
  
  x =  myPort.readStringUntil ('\n'); 
  char[] a = x.toCharArray();
  n = a[0];

} 

void draw ( ) { 
  if(n=='1'){
    back = loadImage("bg.jpg");
    image(back, 0, 0);
  }else if(n=='2'){
    cakeone = loadImage("cake1.png");
    image(cakeone, 0, 0);
  }else if(n=='3'){
    caketwo = loadImage("cake2.png");
    image(caketwo, 0, 0);
  }else if(n=='A'){
    cakethree = loadImage("cake3.png");
    image(cakethree, 0, 0);
  }else if(n=='4'){
    naione = loadImage("naiyou1.png");
    image(naione, 0, 0);
  }else if(n=='5'){
    naitwo = loadImage("naiyou2.png");
    image(naitwo, 0, 0);
  }else if(n=='6'){
    naithree = loadImage("naiyou3.png");
    image(naithree, 0, 0);
  }else if(n=='B'){
    naifour = loadImage("naiyou4.png");
    image(naifour, 0, 0);
  }else if((n=='7')&&(n!=y)){
    pone = loadImage("peiliao1.png");
    image(pone, random(119, 347), random(198, 304));
    y=n;
  }else if((n=='8')&&(n!=y)){
    ptwo = loadImage("peiliao2.png");
    image(ptwo, random(119, 347), random(198, 304));
    y=n;
  }else if((n=='9')&&(n!=y)){
    pthree = loadImage("peiliao3.png");
    image(pthree, random(119, 347), random(198, 304));
    y=n;
  }else if((n=='C')&&(n!=y)){
    pfour = loadImage("peiliao4.png");
    image(pfour, random(119, 347), random(198, 304));
    y=n;
  }else if((n=='*')&&(n!=y)){
    pfive = loadImage("peiliao5.png");
    image(pfive, random(119, 347), random(198, 304));
    y=n;
  }else if((n=='0')&&(n!=y)){
    psix = loadImage("peiliao6.png");
    image(psix, random(119, 347), random(198, 304));
    y=n;
  }else if((n=='#')&&(n!=y)){
    pseven = loadImage("peiliao7.png");
    image(pseven, random(119, 267), random(148, 184));
    y=n;
  }else if(n=='D'){
    peight = loadImage("peiliao8.png");
    image(peight, random(0, 500), random(150, 500));
  }
}
